// This is your Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  userId    String   @id @default(cuid()) @map("user_id")
  username  String   @db.VarChar(50)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(100)
  points    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  orders    Order[]

  @@index([email])
  @@map("users")
}

model Medicine {
  medicineId       String   @id @default(cuid()) @map("medicine_id")
  medicineName     String   @map("medicine_name") @db.VarChar(50)
  medicineType     String   @map("medicine_type") @db.VarChar(50)
  medicineQuantity Int      @map("medicine_quantity")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  orders           Order[]

  @@index([medicineName])
  @@index([medicineType])
  @@map("medicines")
}

model Order {
  orderId     String   @id @default(cuid()) @map("order_id")
  userId      String   @map("user_id")
  medicineId  String   @map("medicine_id")
  quantity    Int
  orderType   String   @map("order_type") @db.VarChar(20)
  useAi       Boolean  @default(false) @map("use_ai")
  totalPoints Int      @default(0) @map("total_points")
  status      String   @default("pending") @db.VarChar(20)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  medicine    Medicine @relation(fields: [medicineId], references: [medicineId], onDelete: Restrict)

  @@index([userId])
  @@index([medicineId])
  @@index([status])
  @@index([createdAt])
  @@map("orders")
}
